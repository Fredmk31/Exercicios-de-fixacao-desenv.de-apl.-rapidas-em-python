import tkinter as tk
from tkinter import messagebox
import sqlite3

# ==============================
# 01 e 02 - Criar a janela
# ==============================
janela = tk.Tk()
janela.title("Olá Mundo")
janela.geometry("400x300")

# ==============================
# 03 - Label de boas-vindas
# ==============================
label_bemvindo = tk.Label(janela, text="Bem-vindo ao Tkinter")
label_bemvindo.pack(pady=10)

# ==============================
# 04 - Botão que imprime "Olá!"
# ==============================
def dizer_ola():
    print("Olá!")

btn_ola = tk.Button(janela, text="Dizer Olá", command=dizer_ola)
btn_ola.pack()

# ==============================
# 05 - Entradas de nome e idade
# ==============================
label_nome = tk.Label(janela, text="Nome:")
label_nome.pack()
entry_nome = tk.Entry(janela)
entry_nome.pack()

label_idade = tk.Label(janela, text="Idade:")
label_idade.pack()
entry_idade = tk.Entry(janela)
entry_idade.pack()

# ==============================
# 06 - Exibir dados no terminal e MessageBox
# ==============================
def exibir_dados():
    nome = entry_nome.get()
    idade = entry_idade.get()
    print(f"Nome: {nome}, Idade: {idade}")
    messagebox.showinfo("Dados", f"Nome: {nome}\nIdade: {idade}")

btn_exibir = tk.Button(janela, text="Exibir Dados", command=exibir_dados)
btn_exibir.pack(pady=5)

# ==============================
# 07 - Botão para limpar campos
# ==============================
def limpar_campos():
    entry_nome.delete(0, tk.END)
    entry_idade.delete(0, tk.END)

btn_limpar = tk.Button(janela, text="Limpar Campos", command=limpar_campos)
btn_limpar.pack(pady=5)

# ==============================
# 08 - Alterar texto do Label nome
# ==============================
def alterar_label_nome():
    label_nome.config(text="Nome Completo")

btn_alterar_label = tk.Button(janela, text="Alterar Texto do Label Nome", command=alterar_label_nome)
btn_alterar_label.pack(pady=5)

# ==============================
# 09 - Enviar dados para o banco de dados
# ==============================
conexao = sqlite3.connect("usuarios.db")
cursor = conexao.cursor()
cursor.execute("""
CREATE TABLE IF NOT EXISTS usuarios (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    idade INTEGER NOT NULL
)
""")
conexao.commit()

def salvar_no_banco():
    nome = entry_nome.get()
    idade = entry_idade.get()
    if nome and idade:
        cursor.execute("INSERT INTO usuarios (nome, idade) VALUES (?, ?)", (nome, idade))
        conexao.commit()
        messagebox.showinfo("Sucesso", "Dados salvos no banco de dados.")
    else:
        messagebox.showwarning("Aviso", "Preencha todos os campos.")

btn_salvar = tk.Button(janela, text="Salvar no Banco de Dados", command=salvar_no_banco)
btn_salvar.pack(pady=10)

# ==============================
# DESAFIO - Conversor de Celsius para Fahrenheit
# ==============================
label_celsius = tk.Label(janela, text="Temperatura (°C):")
label_celsius.pack()
entry_celsius = tk.Entry(janela)
entry_celsius.pack()

def converter_temperatura():
    try:
        celsius = float(entry_celsius.get())
        fahrenheit = celsius * 9/5 + 32
        messagebox.showinfo("Conversão", f"{celsius}°C = {fahrenheit:.2f}°F")
    except ValueError:
        messagebox.showerror("Erro", "Digite um número válido.")

btn_converter = tk.Button(janela, text="Converter para Fahrenheit", command=converter_temperatura)
btn_converter.pack(pady=10)

# ==============================
# Iniciar o loop da interface
# ==============================
janela.mainloop()
conexao.close()
